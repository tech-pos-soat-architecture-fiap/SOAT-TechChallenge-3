name: Deploy application to k8s

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: techfood
      EKS_CLUSTER_NAME: eks-terraform-tech-food
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build with Maven
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: ./mvnw clean package -DskipTests
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Set up kubectl for EKS
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          kubectl delete namespace techfood --ignore-not-found=true
          kubectl wait --for=delete namespace/techfood --timeout=120s || true
          kubectl apply -f k8s/v1/tech-food-namespace.yaml

          sleep 5

          sed -i.bak "s|DOCKER_IMAGE_PLACEHOLDER|${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}|g" k8s/v1/tech-food-deployment-v1.yaml
          kubectl apply -f k8s/v1/tech-food-configmap-v1.yaml
          kubectl apply -f k8s/v1/tech-food-db-secret-v1.yaml
          kubectl apply -f k8s/v1/tech-food-deployment-v1.yaml
          kubectl apply -f k8s/v1/tech-food-service-v1.yaml
          kubectl apply -f k8s/v1/tech-food-hpa-v1.yaml
